<Window x:Class="Launcher.MethodChooserView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Launcher"

        mc:Ignorable="d"
        Title="MethodChooser"
        Height="450"
        Width="800">
    <Window.Resources>
        <Style TargetType="TextBox">
            <Setter Property="Height" Value="20"/> 
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    <DockPanel>
        <GroupBox DockPanel.Dock="Top"
                  Header="Select start function"
                  Margin="5"
                  Padding="5"
                  Visibility ="{Binding HasStartFunction, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBox Text="{Binding StartFunction, Mode=OneWay}" IsReadOnly="True" />
        </GroupBox>

        <!-- Buttons -->
        <GroupBox DockPanel.Dock="Bottom">
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Right">
                <Button Command="{Binding GenerateCommand}"
                        IsEnabled="{Binding CanRender}">
                    Generate Image
                </Button>
            </StackPanel>
        </GroupBox>

        <!-- Center -->
        <GroupBox Header="Available functions (pre-filtered)">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>

                </Grid.ColumnDefinitions>
                <!-- Filter text -->
                <TextBox Grid.Row="0"
                         Margin="0 5 0 5"
                         x:Name="_filterText"
                         TextChanged="_filterText_OnTextChanged"
                         AcceptsReturn="True"/>

<CheckBox Grid.Row="1" Content="Hide excluded functions" Checked="ToggleButton_OnChecked" Unchecked="ToggleButton_OnUnchecked" x:Name="_hideExcludedCheck"/>

                <DataGrid Grid.Row="2"
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding AllPreFilteredFunctions}"
                          x:Name="_dataGrid" >
                    <!--<DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <EventSetter Event="MouseDoubleClick" Handler="_dataGrid_OnMouseDoubleClick" />
                        </Style>
                        </DataGrid.RowStyle>-->
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <!-- Binding from context menu is not so easy because it is not in visual tree 
                            ContextMenu.PlacementTarget, is the DataGrid -->
                            <MenuItem Header="Select start function" Command="{Binding SelectStartFunctionCommand}" CommandParameter="{Binding Path=PlacementTarget.SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type ContextMenu}}}"/>
                            <MenuItem Header="Select only start function" Command="{Binding SelectOnlyStartFunctionCommand}" CommandParameter="{Binding Path=PlacementTarget.SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type ContextMenu}}}"/>
                            <MenuItem Header="Include" Command="{Binding IncludeCommand}" CommandParameter="{Binding Path=PlacementTarget.SelectedItems, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type ContextMenu}}}"/>
                            <MenuItem Header="Exclude" Command="{Binding ExcludeCommand}" CommandParameter="{Binding Path=PlacementTarget.SelectedItems, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type ContextMenu}}}"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Header="Included" Binding="{Binding Included}"/> 
                        <DataGridTextColumn Header="Function"  Binding="{Binding FullName}" IsReadOnly="true" CanUserReorder="False"/>
                        <DataGridCheckBoxColumn  Header="Public" Binding="{Binding Public}" IsReadOnly="True" CanUserReorder="False"/> 
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>

        </GroupBox>

    </DockPanel>
</Window>