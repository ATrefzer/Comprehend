<Window x:Class="Launcher.CallTreeExplorerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Launcher"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:CallTreeExplorerViewModel, IsDesignTimeCreatable=True}"
        Title="CallTreeExplorerView" Height="450" Width="800">


    <Window.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        </ResourceDictionary>
        
    </Window.Resources>
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0" ToolTip="Empty string = make all visible and clear highlighting. '!' = make all visible but keep highlighting">
            <Button Margin="2" Height="22" Width="50" DockPanel.Dock="Right" Command="{Binding SearchCommand}" CommandParameter="{Binding ElementName=Search, Path=Text}">Search</Button>
            <TextBox Margin="2" DockPanel.Dock="Left" x:Name="Search" Background="LightYellow" KeyDown="Search_OnKeyDown"/>
        </DockPanel>

        <TreeView ItemsSource="{Binding Roots}" Grid.Row="1">

            <TreeView.ItemContainerStyle>
                <!-- 
    This Style binds a TreeViewItem to a FunctionCallViewModel. 
    -->
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="Visibility" Value="{Binding IsVisible, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="FontWeight" Value="Normal" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                            <Setter Property="FontWeight" Value="Bold" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>

       

            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type local:FunctionCallViewModel}" ItemsSource="{Binding Children}">

                    <StackPanel Orientation="Horizontal">

                        <StackPanel.ContextMenu>
                            <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                <MenuItem Header="Export"  Click="MenuItem_OnExport"/>
                                <MenuItem Header="Deselect branch"  Click="MenuItem_OnClick"/>
                            </ContextMenu>
                        </StackPanel.ContextMenu>

                        <CheckBox IsChecked="{Binding IsIncluded}" Margin="0 0 2 0"/>
                        <TextBlock Text="{Binding Name}" >

                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsRecursion}" Value="true" >
                                            <Setter Property="Foreground" Value="DarkRed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.Resources>
        </TreeView>
    </Grid>
</Window>
