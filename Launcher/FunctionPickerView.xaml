<Window x:Class="Launcher.FunctionPickerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Launcher"
        xmlns:common="clr-namespace:Launcher.Common"
        mc:Ignorable="d"
        Title="MethodChooser"
        Height="450"
        d:DataContext ="{d:DesignInstance {x:Type local:FunctionPickerViewModel}, IsDesignTimeCreatable=False}"
        Width="800">
    <Window.Resources>
        <Style TargetType="TextBox">
            <Setter Property="Height" Value="20"/> 
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    <DockPanel>

        <Border BorderBrush="Black" DockPanel.Dock="Top" BorderThickness="1"
                
                Visibility="{Binding ShowInstructions, Converter={StaticResource BooleanToVisibilityConverter}}"
                >
            <TextBlock  Padding="10" 
                        Background="LightYellow" 
                        Text="{Binding Instructions}" TextWrapping="Wrap" />
</Border>


        <GroupBox DockPanel.Dock="Top"
                  Header="Select start function"
                  Margin="5"
                  Padding="5"
                  Visibility ="{Binding HasStartFunction, Converter={StaticResource BooleanToVisibilityConverter}}">
            <TextBox Text="{Binding StartFunction, Mode=OneWay}" IsReadOnly="True" />
        </GroupBox>

        <!-- Buttons -->
        <GroupBox DockPanel.Dock="Bottom">
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Right">
                <Button Command="{Binding GenerateCommand}"
                        IsEnabled="{Binding CanRender}"
                        Content="{Binding ExecuteButtonText}"
                        Height="22"
                        Width="100"/>
                
            </StackPanel>
        </GroupBox>

        <!-- Center -->
        <GroupBox Header="Available functions (pre-filtered)">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>

                </Grid.ColumnDefinitions>
                <!-- Filter text -->
                <TextBox Grid.Row="0"
                         Margin="0 5 0 5"
                         x:Name="_filterText"
                         TextChanged="_filterText_OnTextChanged"
                         AcceptsReturn="True"/>

<CheckBox Grid.Row="1" Content="Hide excluded functions" Checked="ToggleButton_OnChecked" Unchecked="ToggleButton_OnUnchecked" x:Name="_hideExcludedCheck"
          Visibility="{Binding ShowIncludeColumn, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                
                <!-- Here a row is skipped -->

                <DataGrid Grid.Row="3"
                          AutoGenerateColumns="False"
                          ItemsSource="{Binding AllPreFilteredFunctions}"
                          x:Name="_dataGrid" >

                    <DataGrid.Resources>
                        <ResourceDictionary>
                            <common:BindingProxy x:Key="Proxy" Data="{Binding}"/>
                        </ResourceDictionary>
                    </DataGrid.Resources>

                    <!--<DataGrid.RowStyle>
                        <Style TargetType="DataGridRow">
                            <EventSetter Event="MouseDoubleClick" Handler="_dataGrid_OnMouseDoubleClick" />
                        </Style>
                        </DataGrid.RowStyle>-->
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <!-- Binding from context menu is not so easy because it is not in visual tree 
                            ContextMenu.PlacementTarget, is the DataGrid -->
                            <MenuItem Header="Select start function" Command="{Binding SelectStartFunctionCommand}" CommandParameter="{Binding Path=PlacementTarget.SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type ContextMenu}}}"/>
                            <MenuItem Header="Include" 
                                      Command="{Binding IncludeCommand}" 
                                      CommandParameter="{Binding Path=PlacementTarget.SelectedItems, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type ContextMenu}}}"
                                      Visibility="{Binding Data.ShowIncludeColumn, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Proxy}}"/>
                            <MenuItem Header="Exclude" 
                                      Command="{Binding ExcludeCommand}" 
                                      CommandParameter="{Binding Path=PlacementTarget.SelectedItems, RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type ContextMenu}}}"
                                      Visibility="{Binding Data.ShowIncludeColumn, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Proxy}}"
                                      />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Header="Included" Binding="{Binding Included}" Visibility="{Binding Data.ShowIncludeColumn, Converter={StaticResource BooleanToVisibilityConverter}, Source={StaticResource Proxy}}"/> 
                        <DataGridTextColumn Header="Function"  Binding="{Binding FullName}" IsReadOnly="true" CanUserReorder="False"/>
                        <DataGridCheckBoxColumn  Header="Public" Binding="{Binding Public}" IsReadOnly="True" CanUserReorder="False"/> 
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>

        </GroupBox>

    </DockPanel>
</Window>